name: Build and Deploy PSYOP Website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: psyop/psyop-website
  KUBE_CONFIG_PATH: ./k8s

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Haskell
      uses: haskell/actions/setup@v2
      with:
        ghc-version: '9.4'
        stack-version: 'latest'
    
    - name: Cache Haskell dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.stack
          .stack-work
        key: ${{ runner.os }}-stack-${{ hashFiles('stack.yaml.lock') }}
        restore-keys: |
          ${{ runner.os }}-stack-
    
    - name: Install dependencies
      run: stack build --dependencies-only --allow-different-user
    
    - name: Run unit tests
      run: stack test --allow-different-user
    
    - name: Build Haskell application
      run: stack build --allow-different-user
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: website-build
        path: .stack-work/

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: registry.digitalocean.com
        username: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: registry.digitalocean.com/psyop/${{ env.DOCKER_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: [test, build-and-push]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Update Kubernetes manifests
      run: |
        # Extract the SHA tag from the previous job
        SHA_TAG="${GITHUB_SHA:0:7}"
        IMAGE_TAG="${GITHUB_REF_NAME}-${SHA_TAG}"
        
        # Update the image tag in deployment.yaml
        sed -i "s|image: .*|image: registry.digitalocean.com/psyop/${{ env.DOCKER_IMAGE }}:${IMAGE_TAG}|" k8s/deployment.yaml
        
        echo "Updated image tag to: registry.digitalocean.com/psyop/${{ env.DOCKER_IMAGE }}:${IMAGE_TAG}"
    
    - name: Commit updated manifests
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add k8s/deployment.yaml
        git commit -m "Update image tag to ${GITHUB_SHA:0:7}" || exit 0
        git push
