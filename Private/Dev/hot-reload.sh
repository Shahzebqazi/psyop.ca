#!/bin/bash

echo "üî• PSYOP Hot Reloading Development Server"
echo "üß≠ Testing MenuBar Component Architecture"
echo "Starting development environment with file watching..."

echo "üöÄ Starting server with automatic restart on file changes..."
echo "üí° The server will automatically restart when you save changes!"
echo "üåê Server will be available at http://localhost:8080"
echo "üß≠ Testing MenuBar component only - simplified routing"
echo "üìÅ Watching Src/ for changes"
echo "Press Ctrl+C to stop"

# Function to start server
start_server() {
    echo "üîÑ Starting server..."
    cd "$(dirname "$0")/../.."  # Navigate to project root
    stack run &
    SERVER_PID=$!
    echo "‚úÖ Server started with PID: $SERVER_PID"
    cd - > /dev/null  # Return to script directory
}

# Function to stop server
stop_server() {
    if [ ! -z "$SERVER_PID" ]; then
        echo "üõë Stopping server (PID: $SERVER_PID)..."
        kill $SERVER_PID 2>/dev/null
        wait $SERVER_PID 2>/dev/null
        echo "‚úÖ Server stopped"
    fi
}

# Function to restart server
restart_server() {
    echo "üîÑ Restarting server due to file change..."
    stop_server
    sleep 1
    start_server
}

# Trap to clean up on exit
trap 'stop_server; echo "üëã Hot reloading server stopped"; exit 0' INT TERM

# Start initial server
start_server

# Watch for file changes and restart server
echo "üëÄ Watching for file changes..."

# Get absolute path to source directory
SRC_DIR="$(dirname "$0")/../../src"

# Check if fswatch is available (macOS preferred)
if command -v fswatch >/dev/null 2>&1; then
    echo "üçé Using fswatch (macOS native file watcher)"
    echo "üìÅ Watching: $SRC_DIR"
    fswatch -o "$SRC_DIR" | while read num; do
        echo "üìù File change detected!"
        restart_server
        sleep 2  # Debounce rapid changes
    done
else
    echo "‚è∞ Using polling method (no fswatch available)"
    # Fallback: Simple polling approach
    LAST_MOD=$(find "$SRC_DIR" -type f -name "*.hs" -exec stat -f "%m" {} \; | sort -n | tail -1)
    while true; do
        sleep 2
        CURRENT_MOD=$(find "$SRC_DIR" -type f -name "*.hs" -exec stat -f "%m" {} \; | sort -n | tail -1)
        if [ "$CURRENT_MOD" != "$LAST_MOD" ]; then
            echo "üìù File change detected!"
            restart_server
            LAST_MOD=$CURRENT_MOD
            sleep 2  # Debounce
        fi
    done
fi
